//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP_CONSUME_SERVICE.WFC_NORTHWND {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WCF_NORTHWND")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="categoriaModel", Namespace="http://schemas.datacontract.org/2004/07/NORTHWND.Models")]
    [System.SerializableAttribute()]
    public partial class categoriaModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PictureField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Picture {
            get {
                return this.PictureField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureField, value) != true)) {
                    this.PictureField = value;
                    this.RaisePropertyChanged("Picture");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WFC_NORTHWND.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        ASP_CONSUME_SERVICE.WFC_NORTHWND.CompositeType GetDataUsingDataContract(ASP_CONSUME_SERVICE.WFC_NORTHWND.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<ASP_CONSUME_SERVICE.WFC_NORTHWND.CompositeType> GetDataUsingDataContractAsync(ASP_CONSUME_SERVICE.WFC_NORTHWND.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/selectCategory", ReplyAction="http://tempuri.org/IService1/selectCategoryResponse")]
        ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel selectCategory(ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel categoria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/selectCategory", ReplyAction="http://tempuri.org/IService1/selectCategoryResponse")]
        System.Threading.Tasks.Task<ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel> selectCategoryAsync(ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel categoria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/selectAllCategory", ReplyAction="http://tempuri.org/IService1/selectAllCategoryResponse")]
        ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel[] selectAllCategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/selectAllCategory", ReplyAction="http://tempuri.org/IService1/selectAllCategoryResponse")]
        System.Threading.Tasks.Task<ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel[]> selectAllCategoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/insertCategory", ReplyAction="http://tempuri.org/IService1/insertCategoryResponse")]
        int insertCategory(ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel categoria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/insertCategory", ReplyAction="http://tempuri.org/IService1/insertCategoryResponse")]
        System.Threading.Tasks.Task<int> insertCategoryAsync(ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel categoria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateCategory", ReplyAction="http://tempuri.org/IService1/updateCategoryResponse")]
        int updateCategory(ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel categoria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateCategory", ReplyAction="http://tempuri.org/IService1/updateCategoryResponse")]
        System.Threading.Tasks.Task<int> updateCategoryAsync(ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel categoria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteCategory", ReplyAction="http://tempuri.org/IService1/deleteCategoryResponse")]
        int deleteCategory(ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel categoria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteCategory", ReplyAction="http://tempuri.org/IService1/deleteCategoryResponse")]
        System.Threading.Tasks.Task<int> deleteCategoryAsync(ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel categoria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchNameCategory", ReplyAction="http://tempuri.org/IService1/searchNameCategoryResponse")]
        ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel[] searchNameCategory(ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel categoria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchNameCategory", ReplyAction="http://tempuri.org/IService1/searchNameCategoryResponse")]
        System.Threading.Tasks.Task<ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel[]> searchNameCategoryAsync(ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel categoria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchDescriptionCategory", ReplyAction="http://tempuri.org/IService1/searchDescriptionCategoryResponse")]
        ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel[] searchDescriptionCategory(ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel categoria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchDescriptionCategory", ReplyAction="http://tempuri.org/IService1/searchDescriptionCategoryResponse")]
        System.Threading.Tasks.Task<ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel[]> searchDescriptionCategoryAsync(ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel categoria);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ASP_CONSUME_SERVICE.WFC_NORTHWND.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ASP_CONSUME_SERVICE.WFC_NORTHWND.IService1>, ASP_CONSUME_SERVICE.WFC_NORTHWND.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public ASP_CONSUME_SERVICE.WFC_NORTHWND.CompositeType GetDataUsingDataContract(ASP_CONSUME_SERVICE.WFC_NORTHWND.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<ASP_CONSUME_SERVICE.WFC_NORTHWND.CompositeType> GetDataUsingDataContractAsync(ASP_CONSUME_SERVICE.WFC_NORTHWND.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel selectCategory(ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel categoria) {
            return base.Channel.selectCategory(categoria);
        }
        
        public System.Threading.Tasks.Task<ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel> selectCategoryAsync(ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel categoria) {
            return base.Channel.selectCategoryAsync(categoria);
        }
        
        public ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel[] selectAllCategory() {
            return base.Channel.selectAllCategory();
        }
        
        public System.Threading.Tasks.Task<ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel[]> selectAllCategoryAsync() {
            return base.Channel.selectAllCategoryAsync();
        }
        
        public int insertCategory(ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel categoria) {
            return base.Channel.insertCategory(categoria);
        }
        
        public System.Threading.Tasks.Task<int> insertCategoryAsync(ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel categoria) {
            return base.Channel.insertCategoryAsync(categoria);
        }
        
        public int updateCategory(ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel categoria) {
            return base.Channel.updateCategory(categoria);
        }
        
        public System.Threading.Tasks.Task<int> updateCategoryAsync(ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel categoria) {
            return base.Channel.updateCategoryAsync(categoria);
        }
        
        public int deleteCategory(ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel categoria) {
            return base.Channel.deleteCategory(categoria);
        }
        
        public System.Threading.Tasks.Task<int> deleteCategoryAsync(ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel categoria) {
            return base.Channel.deleteCategoryAsync(categoria);
        }
        
        public ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel[] searchNameCategory(ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel categoria) {
            return base.Channel.searchNameCategory(categoria);
        }
        
        public System.Threading.Tasks.Task<ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel[]> searchNameCategoryAsync(ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel categoria) {
            return base.Channel.searchNameCategoryAsync(categoria);
        }
        
        public ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel[] searchDescriptionCategory(ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel categoria) {
            return base.Channel.searchDescriptionCategory(categoria);
        }
        
        public System.Threading.Tasks.Task<ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel[]> searchDescriptionCategoryAsync(ASP_CONSUME_SERVICE.WFC_NORTHWND.categoriaModel categoria) {
            return base.Channel.searchDescriptionCategoryAsync(categoria);
        }
    }
}
